pragma solidity ^0.5.3;
contract Lottery{
    address public owner; // creator of the contract
    address payable [] public players; //list of the players
    address payable public winner; // the Final winner
    address add; // Our Lottery's address of the Smart Contract
    
    constructor() public{
        owner = msg.sender;
        add=address(this);
}
    modifier OwnerOnly{
        if(msg.sender == owner){
    _; }
    }
    function () external payable{
        deposit();
    }
    
    function deposit() public payable{
        require(msg.value >=0.5 ether);
        players.push(msg.sender);
    }
    function GenerateRandomNum() private view returns(uint){
        return uint(keccak256(abi.encodePacked(now, block.difficulty, players.length)));
    }
function get_balance() public view returns(uint){
        require(msg.sender == owner);
        return address(add).balance; //return contract balance
    }
    function pickWinner() OwnerOnly public{
        uint randomNumber = GenerateRandomNum();
        uint index = randomNumber % players.length; //20 % 8 = 4, 8 %8 = 20 //
        winner = players[index];
        winner.transfer(address(add).balance);
        players = new address payable [](0);
    }
}
